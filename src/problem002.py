#!/usr/bin/env python3

# Problem 2:
#     Each new term in the Fibonacci sequence is generated by adding the
#     previous two terms. By starting with 1 and 2, the first 10 terms will be:
#         1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#     By considering the terms in the Fibonacci sequence whose values do not
#     exceed four million, find the sum of the even-valued terms.
# Answer:
#     4613732
# Notes:
#     - Compute and cache only the even-valued terms.

cache = {2: 2, 5: 8}

def problem2(n):
    def fib(n):
        if n in cache:
            return cache[n]
        else:
            new = 4 * fib(n - 3) + fib(n - 6)
            cache[n] = new
            return new

    s = 2
    k = 5
    f = 8
    while f < n:
        s += f
        k += 3
        f = fib(k)

    return s

# print(problem2(4000000))
